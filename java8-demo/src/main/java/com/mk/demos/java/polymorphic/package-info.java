package com.mk.demos.java.polymorphic;

// 多态
//面向对象四个特性：抽象，封装，继承，多态
//  多态：是以上述三个面向对象特性为基础，根据运行时的实际对象类型，同一个方法产生不通的运行结果，使得同一个行为具有不通的表现形式。
//  多态提升了对象的扩展能力和运行时的丰富想象力。

//  多态是指编译层面无法确定最终调用的方法体，以override为基础来实现面向对象特性，在运行期由JVM进行动态绑定，调用合适的override方法体来执行。
//  overload是编辑期确定方法调用，属于静态绑定，本质上overload方法是完全不同的方法。